{"version":3,"sources":["api/colors.ts","App.tsx","api/cars.ts","index.tsx"],"names":["id","name","cars","brand","rentPrice","colorId","map","car","getColorById","colorsFromServer","find","color","App","useState","query","setQuery","selectedColorId","setSelectedColorId","visibleCars","filter","carsByBrand","toLocaleLowerCase","includes","carsByColor","type","placeholder","onChange","event","target","value","Number","disabled","style","ReactDOM","render","document","getElementById"],"mappings":"4NAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,Q,OCKXC,ECRS,CACb,CACEF,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,GAAIG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEL,GAAI,GAAIG,MAAO,aAAcC,UAAW,IAAKC,QAAS,IDxB9BC,KAAI,SAACC,GAC/B,IAAMC,EAAeC,EAClBC,MAAK,SAAAC,GAAK,OAAKA,EAAMX,KAAOO,EAAIF,WAEnC,OAAO,2BACFE,GADL,IAEEC,oBAISI,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAMMC,EAAchB,EAAKiB,QAAO,SAACZ,GAC/B,IAAMa,EACFb,EAAIJ,MAAMkB,oBAAoBC,SAASR,EAAMO,qBAE3CE,EAAchB,EAAIF,UAAYW,EAEpC,OAAOA,EACHI,GAAeG,EACfH,KAON,OACE,gCACE,uBACEI,KAAK,SACLC,YAAY,oBACZC,SAxBoB,SAACC,GACzBZ,EAASY,EAAMC,OAAOC,UA0BpB,yBACEA,MAAOb,EACPU,SAdsB,SAACC,GAC3BV,EAAmBa,OAAOH,EAAMC,OAAOC,SAWrC,UAIE,wBAAQA,MAAO,EAAGE,UAAQ,EAA1B,2BACCtB,EAAiBH,KAAI,SAACK,GAAD,OACpB,wBAEEkB,MAAOlB,EAAMX,GAFf,SAIGW,EAAMV,MAHFU,EAAMX,UAQjB,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACGkB,EAAYZ,KAAI,SAACC,GAAD,aACf,+BACE,6BAAKA,EAAIP,KACT,6BAAKO,EAAIJ,QACT,oBAAI6B,MAAO,CAAErB,MAAO,OAApB,mBAA8BJ,EAAIC,oBAAlC,aAA8B,EAAkBP,OAChD,6BAAKM,EAAIH,2B,ME1EvB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f47abc83.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { ChangeEvent, useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\nconst cars = carsFromServer.map((car) => {\n  const getColorById = colorsFromServer\n    .find(color => (color.id === car.colorId));\n\n  return {\n    ...car,\n    getColorById,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [selectedColorId, setSelectedColorId] = useState(0);\n\n  const handleChangeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const visibleCars = cars.filter((car) => {\n    const carsByBrand\n      = car.brand.toLocaleLowerCase().includes(query.toLocaleLowerCase());\n\n    const carsByColor = car.colorId === selectedColorId;\n\n    return selectedColorId\n      ? carsByBrand && carsByColor\n      : carsByBrand;\n  });\n\n  const handleChangeColorId = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedColorId(Number(event.target.value));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        onChange={handleChangeQuery}\n      />\n\n      <select\n        value={selectedColorId}\n        onChange={handleChangeColorId}\n      >\n        <option value={0} disabled>Chose a color</option>\n        {colorsFromServer.map((color) => (\n          <option\n            key={color.id}\n            value={color.id}\n          >\n            {color.name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {visibleCars.map((car) => (\n            <tr>\n              <td>{car.id}</td>\n              <td>{car.brand}</td>\n              <td style={{ color: 'red' }}>{car.getColorById?.name}</td>\n              <td>{car.rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}